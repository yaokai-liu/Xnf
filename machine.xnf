Machine = MACHINE IDENTIFIER LEFT_BRACKET Entries RIGHT_BRACKET SEMICOLON;
Entries = Entries Entry | Entry;
Entry = RegisterGroup | Instruction | Memory | Immediate | Set;

RegisterGroup = REGISTER IDENTIFIER WIDTH LEFT_BRACKET Registers RIGHT_BRACKET SEMICOLON;
Memory = MEMORY IDENTIFIER WIDTH LEFT_BRACKET MemItem MemItem RIGHT_BRACKET SEMICOLON;
Instruction = INSTRUCTION IDENTIFIER LEFT_BRACKET InstrForms RIGHT_BRACKET SEMICOLON;
Immediate = IMMEDIATE IDENTIFIER WIDTH TYPE SEMICOLON;
Set = SET IDENTIFIER LEFT_BRACKET SetItems RIGHT_BRACKET SEMICOLON;

Registers = Registers Register | Register;
InstrForms = InstrForms InstrForm | InstrForm;
SetItems = SetItems COMMA IDENTIFIER | IDENTIFIER;

MemItem = MEM_KEY COLON BIT_FIELD SEMICOLON;

Register = IDENTIFIER COLON BIT_FIELD EQUAL NUMBER SEMICOLON;

InstrForm = Pattern EQUAL WIDTH           LEFT_BRACKET InstrParts RIGHT_BRACKET SEMICOLON
          | Pattern EQUAL WIDTH TIME_TICK LEFT_BRACKET InstrParts RIGHT_BRACKET SEMICOLON;

Pattern = LEFT_SQUARE_BRACKET PatternArgs RIGHT_SQUARE_BRACKET
        | LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET;
InstrParts = InstrParts InstrPart | InstrPart;
InstrPart = PART_KEY COLON WIDTH EQUAL Layout SEMICOLON;
Layout = Evaluable | LEFT_BRACKET MappingItems RIGHT_BRACKET;
MappingItems = MappingItems COMMA MappingItem | MappingItem;
MappingItem = BIT_FIELD EQUAL Evaluable;

PatternArgs = PatternArgs COMMA IDENTIFIER
             | IDENTIFIER;

Evaluable = IDENTIFIER DOT MEM_KEY
          | IDENTIFIER BIT_FIELD
          | IDENTIFIER
          | NUMBER;